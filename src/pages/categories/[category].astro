---
import BaseLayout from "../../layouts/BaseLayout.astro";
import axios from 'axios';

import ErrorMessage from "../../components/ErrorMessage.astro";

import { textToSlug, capitalizeText } from "../../utils/helper";
import MealCard from "../../components/MealCard.astro";

// Define types for the API responses
type Category = {
    strCategory: string;
};

type Meal = {
    idMeal: string;
    strMeal: string;
    strMealThumb: string;
};

// Fetch static paths for categories
export async function getStaticPaths() {
    const response = await axios.get<{ meals: Category[] }>('https://www.themealdb.com/api/json/v1/1/list.php?c=list');
    const categories = response.data.meals;

    const paths = categories.map((category: Category) => ({
        params: { category: textToSlug(category.strCategory) },
    }));

    return paths;
}

const { category } = Astro.params;

// Fetch items for the specific category
let items: Meal[] = [];
let errorMessage: string | null = null;

try {
    const response = await axios.get<{ meals: Meal[] }>(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);
    items = response.data.meals;

    // Validate the structure of the items
    if (!Array.isArray(items) || items.some(item => !item.idMeal || !item.strMeal || !item.strMealThumb)) {
        throw new Error("Invalid data structure received from the API.");
    }
} catch (error) {
    console.error('Error fetching items:', error);
    errorMessage = 'Failed to load items for this category. Please try again later.';
}
---

<BaseLayout title={`Category: ${category}`}>

    <!-- {errorMessage 
        ? <ErrorMessage message={errorMessage} /> 
        : (
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
                {items.map((item) => (
                    <MealCard item={item} key={item.idMeal} />
                ))}
            </div>
        )
    } -->

<section>
    <div class="container relative py-4">

    <div class="flex flex-col items-center justify-center p-4 my-10">
        <p class="text-sm text-gray-500 uppercase">Meals in Category</p>
        <h1 class="text-3xl font-bold mb-4 capitalize"> {category}</h1>
        <p class="text-lg">Explore delicious meals from the {category} category.</p>
    </div>

      <div class="grid w-full grid-cols-1 gap-4 lg:grid-cols-3">
        {items.map((item) => (
            <MealCard item={item} key={item.idMeal} />
        ))}
      </div>
    </div>
  </section>
</BaseLayout>